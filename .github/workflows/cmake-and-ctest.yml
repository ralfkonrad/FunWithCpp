name: Build and Test with CMake and CTest

on:
  push: { }
  pull_request: { }

jobs:
  build-and-test:
    strategy:
      fail-fast: false

      matrix:
        os: [
          macos-latest,
          ubuntu-latest,
          windows-2022
        ]

        cxx-standard: [
          17,
          20
        ]

        preset: [
          linux-clang-release-ninja,
          linux-gcc-release-ninja,
          macos-clang-release-ninja,
          windows-mscv-release-ninja
        ]

        exclude:
          - os: macos-latest
            preset: linux-clang-release-ninja
          - os: macos-latest
            preset: linux-gcc-release-ninja
          - os: macos-latest
            preset: windows-mscv-release-ninja

          - os: ubuntu-latest
            preset: macos-clang-release-ninja
          - os: ubuntu-latest
            preset: windows-mscv-release-ninja

          - os: windows-2022
            preset: linux-clang-release-ninja
          - os: windows-2022
            preset: linux-gcc-release-ninja
          - os: windows-2022
            preset: macos-clang-release-ninja

        include:
          - os: macos-latest
            cmake_cxx_compiler_launcher: ccache
            preconfigure-action:

          - os: ubuntu-latest
            cmake_cxx_compiler_launcher: ccache
            preconfigure-action:

          - os: windows-2022
            cmake_cxx_compiler_launcher: sccache
            preconfigure-action: |
              & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\Launch-VsDevShell.ps1" -Arch amd64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Cache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}-${{ github.job }}-${{ matrix.cxx-standard }}
          restore-keys: ${{ matrix.os }}-
          variant: ${{ matrix.CMAKE_CXX_COMPILER_LAUNCHER }}

      - name: Setup Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install ninja-build

      - name: Setup macOS
        if: runner.os == 'macOS'
        run: |
          brew install ninja

      - name: Setup Windows
        if: runner.os == 'Windows'
        run: |
          choco install -y ninja

      - name: Configure CMake and Build
        run: |
          ${{ matrix.preconfigure-action }}
          cmake --version
          cmake --preset ${{ matrix.preset }} -DCMAKE_CXX_STANDARD=${{ matrix.cxx-standard }} -DCMAKE_CXX_COMPILER_LAUNCHER=${{ matrix.cmake_cxx_compiler_launcher }}
          cmake --build --preset ${{ matrix.preset }} -v

      - name: Test
        run: |
          ctest --preset ${{ matrix.preset }}